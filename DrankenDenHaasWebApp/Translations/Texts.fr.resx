<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Sur nous...</value>
  </data>
  <data name="Account" xml:space="preserve">
    <value>Compte</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="Alcohol" xml:space="preserve">
    <value>Alcohol%</value>
  </data>
  <data name="All_rights_reserved" xml:space="preserve">
    <value>tous droits réservés</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="Articles" xml:space="preserve">
    <value>articles</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>retour à l'aperçu</value>
  </data>
  <data name="BasketEmpty" xml:space="preserve">
    <value>s'il vous plaît ajouter un produit d'abord</value>
  </data>
  <data name="BussinessAccount" xml:space="preserve">
    <value>Compte bussiness</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Catégories</value>
  </data>
  <data name="CategoryDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="CategoryDescriptionError" xml:space="preserve">
    <value>Le catégorie doit avoir un description</value>
  </data>
  <data name="CategoryLengthError" xml:space="preserve">
    <value>Le nom de catégorie ne peut pas avoir plus que {1} caractères (minimallement {2})</value>
  </data>
  <data name="CategoryName" xml:space="preserve">
    <value>Catégorie</value>
  </data>
  <data name="CategoryNameError" xml:space="preserve">
    <value>Le catégorie doit avoir un nom</value>
  </data>
  <data name="CategoryNew" xml:space="preserve">
    <value>Nouveau catégorie</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirmer le mot de passe</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contacter</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Contenu cl</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Pays d'origine</value>
  </data>
  <data name="CustomerId" xml:space="preserve">
    <value>Id client</value>
  </data>
  <data name="Customers" xml:space="preserve">
    <value>Clients</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Donnés</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>effacer</value>
  </data>
  <data name="DeleteSure" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir supprimer ce message?</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>editer</value>
  </data>
  <data name="EmailError" xml:space="preserve">
    <value>L'adresse email doit avoir la forme "x.y@z"</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Bonjour</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="IsPayed" xml:space="preserve">
    <value>a été payé</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>pièces</value>
  </data>
  <data name="LanguageError" xml:space="preserve">
    <value>choisissez une langue s'il vous plait</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Entrer</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Sortir</value>
  </data>
  <data name="Manage" xml:space="preserve">
    <value>Gestion</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>Nouveau mot de passe</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Ancien mot de passe</value>
  </data>
  <data name="OrderId" xml:space="preserve">
    <value>Numéro commande</value>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Commandes</value>
  </data>
  <data name="OrderWhen" xml:space="preserve">
    <value>Date de commande</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Mot de passe</value>
  </data>
  <data name="PasswordError" xml:space="preserve">
    <value>s'il vous plaît donner mot de passe</value>
  </data>
  <data name="People" xml:space="preserve">
    <value>Personnes</value>
  </data>
  <data name="PersonCreate" xml:space="preserve">
    <value>Nouveau personne</value>
  </data>
  <data name="PersonDateOfBirth" xml:space="preserve">
    <value>Date de naissance</value>
  </data>
  <data name="PersonEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="PersonFirstname" xml:space="preserve">
    <value>Prénom</value>
  </data>
  <data name="PersonLanguage" xml:space="preserve">
    <value>Langue</value>
  </data>
  <data name="PersonPhone" xml:space="preserve">
    <value>Numéro Telephone</value>
  </data>
  <data name="PersonSurname" xml:space="preserve">
    <value>Nom de famille</value>
  </data>
  <data name="PriceItem" xml:space="preserve">
    <value>€/article</value>
  </data>
  <data name="Producer" xml:space="preserve">
    <value>Produceur</value>
  </data>
  <data name="ProducerCountryError" xml:space="preserve">
    <value>s'il vous plaît choisir un pays</value>
  </data>
  <data name="ProducerName" xml:space="preserve">
    <value>Nom produceur</value>
  </data>
  <data name="ProducerNameError" xml:space="preserve">
    <value>veuillez choisir un nom</value>
  </data>
  <data name="ProducerNew" xml:space="preserve">
    <value>Nouveau produceur</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Produit</value>
  </data>
  <data name="ProductContentError" xml:space="preserve">
    <value>S'il vous plaît donner le contenu d'article</value>
  </data>
  <data name="ProductDescription" xml:space="preserve">
    <value>Desciption</value>
  </data>
  <data name="ProductDescriptionError" xml:space="preserve">
    <value>S'il vous plaît donner une description</value>
  </data>
  <data name="ProductId" xml:space="preserve">
    <value>Numéro de produit</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>Nom produit</value>
  </data>
  <data name="ProductNameError" xml:space="preserve">
    <value>S'il vous plaît donner un nom de produit</value>
  </data>
  <data name="ProductNew" xml:space="preserve">
    <value>Nouveau produit</value>
  </data>
  <data name="ProductPriceError" xml:space="preserve">
    <value>S'il vous plaît donner un prix </value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Produits</value>
  </data>
  <data name="ProductSoldPerError" xml:space="preserve">
    <value>L'article est vendu par</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Régistrer</value>
  </data>
  <data name="RegisterIfNoAccount" xml:space="preserve">
    <value>Si vous ne disposez pas d'un compte!</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Se souvenir de moi</value>
  </data>
  <data name="Shopbasket" xml:space="preserve">
    <value>panier d'achat</value>
  </data>
  <data name="SoldPer" xml:space="preserve">
    <value>Vendu par</value>
  </data>
  <data name="SubTotal" xml:space="preserve">
    <value>Sous-total</value>
  </data>
  <data name="TotalPrice" xml:space="preserve">
    <value>Prix total</value>
  </data>
  <data name="UserId" xml:space="preserve">
    <value>Id utilisateur</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Nom utilisateur</value>
  </data>
  <data name="UsernameError" xml:space="preserve">
    <value>Entrez le nom d'utilisateur  s'il vous plait</value>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>"Ta soif est notre affaire!"</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Utilisateurs</value>
  </data>
  <data name="FindUs" xml:space="preserve">
    <value>Sait comment nous trouver ou nous donner une cloche ;)</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Non</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Oui</value>
  </data>
  <data name="ChangeAccount" xml:space="preserve">
    <value>Editer de compte</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Changer le mot de passe</value>
  </data>
  <data name="PrivateAccount" xml:space="preserve">
    <value>Compte privé</value>
  </data>
</root>